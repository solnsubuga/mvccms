@model MvcCMS.Models.Post

@{

}
@section sheets{

    <link href="~/Content/simplemde.min.css" rel="stylesheet" />
 }


 <!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        @ViewBag.Title
        <small>Article</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("index","admin")"><i class="fa fa-dashboard"></i> Home</a></li>
        <li><a href="@Url.Action("index","post")">Articles</a></li>
        <li class="active">Article</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <div class='row'>
        <div class='col-md-12'>
            <div class='box box-info'>
                <div class='box-body pad'>
                  @using (Html.BeginForm())
                  {
                    <div class="box-body">
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label" })
                         
                                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                         
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label" })
                         
                                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control", @id = "editor1" } })
                                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                           
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label " })
                          
                                @Html.EditorFor(model => model.Published, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                            
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label" })
                            
                                @Html.EditorFor(model => model.Tags, "TagEditor", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
                          
                        </div>
                            <input type="submit" value="Create Article" class="btn btn-primary" />
                           
                        </div>
                        }

                    </div>
            </div><!-- /.box -->
        </div><!-- /.col-->
    </div><!-- ./row -->

</section><!-- /.content -->

<script src="~/scripts/simplemde.min.js"></script>

<script>
        new SimpleMDE({
            element: document.getElementsByName('Content')[0]
        }).render();
        new SimpleMDE({
            element: document.getElementsByName('Excerpt')[0]
        }).render();

        $('input[name=Published]').datetimepicker({
            allowInputToggle:true,
            format:'YYYY-MM-DD HH:mm:ss',
            showClear:true,
            defaultDate: '{{ old('Published',@Model.Published) }}'
        });

        $('input[name=Title]').on('blur',function(){
           var slugElement  = $('input[name=Id]');

            if(slugElement.val()){
                return ;
            }
            slugElement.val(this.value.toLowerCase().replace(/[^a-z0-9-]+/g,'-').replace(/^-+|-+$/g,''));
        });
</script>